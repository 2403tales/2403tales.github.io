import{S as Vc,i as gc,s as ef,C as $i,w as tf,x as of,y as lf,z as sf,A as Gc,q as af,o as rf,B as nf,P as Yc,e as a,t as l,k as f,c as r,a as i,h as s,d as o,m as d,b as A,g as c,I as t,M as cf}from"./vendor-e6930037.js";import{P as ff}from"./_posts-0ccc0035.js";function df(Ae){let p,L,T,m,u,I,Ie,te,gl,ft,es,ts,xo,Le,os,Po,Te,ls,Fo,oe,Wc='<code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">LC_ALL</span></span><span class="token operator">=</span>C</code>',Ho,le,ss,dt,as,jo,se,rs,pt,is,Bo,ae,ut,ns,cs,qo,re,$c='<code class="language-bash"><span class="token function">grep</span> \u2018<span class="token operator">></span>\u2019 in.fasta</code>',Ro,O,fs,ht,ds,ps,mt,us,hs,No,k,ms,vt,vs,ys,yt,Es,_s,Mo,Oe,ws,Go,ke,bs,Yo,v,Se,Et,Cs,As,Is,De,_t,Ls,Ts,Os,Ue,wt,ks,Ss,Ds,xe,bt,Us,xs,Wo,H,Ps,Ct,Fs,Hs,At,js,$o,Pe,Bs,zo,Y,It,qs,Rs,j,Ns,Lt,Ms,Gs,Tt,Ys,Ws,Ko,Fe,$s,Qo,He,zs,Xo,je,ie,Ks,Zo,Be,Qs,Jo,h,y,Ot,Xs,Zs,kt,Js,Vs,St,gs,ea,Dt,ta,oa,la,E,Ut,sa,aa,xt,ra,ia,Pt,na,ca,Ft,fa,da,pa,S,Ht,ua,ha,jt,ma,va,Bt,ya,Ea,_a,qt,wa,ba,Rt,Ca,Vo,qe,Aa,go,_,Ia,Nt,La,Ta,Mt,Oa,ka,Gt,Sa,Da,el,B,Yt,Ua,xa,Wt,Pa,Fa,tl,q,$t,Ha,ja,zt,Ba,qa,ol,Re,Ra,ll,W,Na,Kt,Ma,Ga,sl,$,ne,Ya,Qt,Wa,$a,za,ce,Ka,Xt,Qa,Xa,al,Ne,Za,rl,z,w,Zt,Ja,Va,Jt,ga,er,Vt,tr,or,gt,lr,sr,ar,eo,rr,il,Me,ir,nl,Ge,to,nr,cl,Ye,cr,fl,We,fr,dl,$e,fe,dr,pl,de,oo,pr,ur,ul,ze,hr,hl,K,mr,lo,vr,yr,ml,Ke,Er,vl,Qe,_r,yl,b,so,wr,br,Xe,Cr,ao,ro,Ar,Ir,pe,Lr,io,Tr,Or,kr,Ze,Sr,ue,no,Dr,Ur,he,xr,co,Pr,Fr,El,Q,Hr,fo,jr,Br,_l,Je,qr,wl,X,Rr,po,Nr,Mr,bl,Ve,Gr,Cl,Z,Yr,uo,Wr,$r,Al,D,zr,ho,Kr,Qr,mo,Xr,Zr,Il,C,Jr,vo,Vr,gr,yo,ei,ti,Eo,oi,li,Ll,me,si,_o,ai,Tl,ge,ri,Ol,ve,zc='<code class="language-bash"><span class="token function">grep</span> \u2018<span class="token operator">></span>\u2019 in.fasta</code>',kl,U,ii,wo,ni,ci,bo,fi,di,Sl,et,pi,Dl,ye,Kc=`<code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">LC_ALL</span></span><span class="token operator">=</span>C
<span class="token function">grep</span> \u2018<span class="token operator">></span>\u2019 in.fasta</code>`,Ul,x,ui,Co,hi,mi,Ao,vi,yi,xl,tt,Ee,Ei,Io,_i,wi,Pl,R,bi,Lo,Ci,Ai,To,Ii,Fl,_e,Li,we,Ti,Hl,ot,Oi,jl,P,ki,Oo,Si,Di,be,Ui,xi;return{c(){p=a("h2"),L=l("Target Audience"),T=f(),m=a("ul"),u=a("li"),I=l("You know what a FASTA file looks like"),Ie=f(),te=a("li"),gl=l("You know the "),ft=a("em"),es=l("bits and bytes"),ts=l(" of storage (pun intended \u{1F61B})"),xo=f(),Le=a("h2"),os=l("TL;DR"),Po=f(),Te=a("p"),ls=l("Run"),Fo=f(),oe=a("pre"),Ho=f(),le=a("p"),ss=l("before running your grep statement. Based on your system settings, this might give you a speedup of "),dt=a("strong"),as=l(">500%."),jo=f(),se=a("h2"),rs=l("A quick intro to "),pt=a("code"),is=l("grep"),Bo=f(),ae=a("p"),ut=a("code"),ns=l("grep"),cs=l(" is a GNU utility used for searching files for lines that match a given set of patterns. For example, if you wish to retrieve all the headers in a FASTA file, you can do"),qo=f(),re=a("pre"),Ro=f(),O=a("p"),fs=l("This will retrieve all the lines that contain the character "),ht=a("code"),ds=l(">"),ps=l(". Since all the FASTA headers start with "),mt=a("code"),us=l(">"),hs=l(", this will retrieve all the FASTA headers."),No=f(),k=a("p"),ms=l("Note that "),vt=a("code"),vs=l(">"),ys=l(" can\u2019t occur anywhere else in the FASTA file, apart from the header. Hence, it is guaranteed that only headers will be returned. We can specify a better search pattern, which will restrict the search to return only the lines which start with "),yt=a("code"),Es=l(">"),_s=l(", but that\u2019s out of scope for this article."),Mo=f(),Oe=a("h2"),ws=l("A quick intro to encodings"),Go=f(),ke=a("p"),bs=l("Encodings are a way to represent characters in numbers so that they can be understood by a machine. For example, Assume you (arbitrarily) declare that"),Yo=f(),v=a("ul"),Se=a("li"),Et=a("code"),Cs=l("A"),As=l(" is represented as 65"),Is=f(),De=a("li"),_t=a("code"),Ls=l("H"),Ts=l(" is represented as 72"),Os=f(),Ue=a("li"),wt=a("code"),ks=l("a"),Ss=l(" is represented as 97"),Ds=f(),xe=a("li"),bt=a("code"),Us=l("h"),xs=l(" is represented as 104"),Wo=f(),H=a("p"),Ps=l("Then, your computer will understand "),Ct=a("code"),Fs=l("HahA"),Hs=l(" as "),At=a("code"),js=l("72 97 104 65"),$o=f(),Pe=a("p"),Bs=l("Note:"),zo=f(),Y=a("ul"),It=a("li"),qs=l("Spaces around numbers are just for illustrative purposes"),Rs=f(),j=a("li"),Ns=l("The computer will finally store the values in binary format, as it only understands "),Lt=a("code"),Ms=l("0s"),Gs=l(" and "),Tt=a("code"),Ys=l("1s"),Ws=l(". How to calculate binary representation of a given integer is a topic for a separate day"),Ko=f(),Fe=a("h2"),$s=l("ASCII Encoding"),Qo=f(),He=a("p"),zs=l("ASCII is one of the simplest and most common encodings currently in use. It encodes 128 different characters i.e. assigns integer values to 128 different characters."),Xo=f(),je=a("p"),ie=a("a"),Ks=l("Click here to see the whole table"),Zo=f(),Be=a("p"),Qs=l("In a nutshell,"),Jo=f(),h=a("ul"),y=a("li"),Ot=a("code"),Xs=l("A"),Zs=l(" is represented as 65, "),kt=a("code"),Js=l("B"),Vs=l(" as 66, "),St=a("code"),gs=l("C"),ea=l(" as 67 \u2026 "),Dt=a("code"),ta=l("Z"),oa=l(" as 90"),la=f(),E=a("li"),Ut=a("code"),sa=l("a"),aa=l(" is represented as 97, "),xt=a("code"),ra=l("b"),ia=l(" as 98, "),Pt=a("code"),na=l("c"),ca=l(" as 99 \u2026 "),Ft=a("code"),fa=l("z"),da=l(" as 122"),pa=f(),S=a("li"),Ht=a("code"),ua=l("0"),ha=l(" is represented as 48, "),jt=a("code"),ma=l("1"),va=l(" as 49 \u2026 "),Bt=a("code"),ya=l("9"),Ea=l(" as 57"),_a=f(),qt=a("li"),wa=l("Other numbers represent things like space, enter key, backspace, symbols (+, -, etc.) escape sequences (newlines, tabs, null character, etc)."),ba=f(),Rt=a("li"),Ca=l("Every ASCII encoded character takes exactly 1 byte of memory."),Vo=f(),qe=a("h2"),Aa=l("Unicode Character Set"),go=f(),_=a("p"),Ia=l("If you\u2019ve heard anything about encoding, then you must\u2019ve heard about "),Nt=a("code"),La=l("Unicode"),Ta=l(". The need for "),Mt=a("code"),Oa=l("Unicode"),ka=l(" arose because "),Gt=a("code"),Sa=l("ASCII"),Da=l(" wasn\u2019t designed to handle more than 128 characters."),el=f(),B=a("p"),Yt=a("code"),Ua=l("ASCII"),xa=l(" worked perfectly in the 60s and 70s as there were very few computers and even fewer groups using computers. But, with the advent of the internet, and the widespread adoption of computers in different parts of the world, encoding different character sets became a major requirement. For example, computers had no way of understanding Hindi characters like \u0905, \u0906, etc. We needed a way to encode them, and "),Wt=a("code"),Pa=l("Unicode"),Fa=l(" provided a way to do just that. It simply mapped a given character to some unique number."),tl=f(),q=a("p"),$t=a("strong"),Ha=l("Note"),ja=l(": "),zt=a("code"),Ba=l("Unicode"),qa=l(" doesn\u2019t contain every character from every language."),ol=f(),Re=a("h2"),Ra=l("UTF-8 encoding"),ll=f(),W=a("p"),Na=l("As mentioned above, "),Kt=a("code"),Ma=l("Unicode"),Ga=l(" just maps a character to a number. It does not specify how that number is stored in the computer. For example, let\u2019s say we decide to"),sl=f(),$=a("ul"),ne=a("li"),Ya=l("Represent "),Qt=a("code"),Wa=l("A"),$a=l(" as 65"),za=f(),ce=a("li"),Ka=l("Represent "),Xt=a("code"),Qa=l("\u0906"),Xa=l(" as 995."),al=f(),Ne=a("p"),Za=l("Now, assuming a byte is an absolute unit of storage, You can store"),rl=f(),z=a("ul"),w=a("li"),Zt=a("code"),Ja=l("A"),Va=l(" using 1 byte and "),Jt=a("code"),ga=l("\u0906"),er=l(" using 2 bytes. (As "),Vt=a("code"),tr=l("65 < 256"),or=l(", and "),gt=a("code"),lr=l("256 < 995 < 256 * 256"),sr=l(" )"),ar=f(),eo=a("li"),rr=l("both using 2 bytes. In this case, you\u2019ll waste 1 extra byte while storing A"),il=f(),Me=a("p"),ir=l("The point of this example was to show that one Unicode character can be stored in multiple ways."),nl=f(),Ge=a("blockquote"),to=a("p"),nr=l("UTF-8 is one of the ways to store Unicode characters. It is designed to encode millions of characters, while ASCII only encodes 128 characters."),cl=f(),Ye=a("p"),cr=l("Another thing to note about UTF-8 is it is compatible with ASCII i.e. any ASCII encoded character is a valid UTF-8 encoded character."),fl=f(),We=a("p"),fr=l("If you\u2019re a software engineer or are really psyched up about encodings, you should definitely read the following blog post"),dl=f(),$e=a("p"),fe=a("a"),dr=l("The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets (No Excuses!)"),pl=f(),de=a("h2"),oo=a("code"),pr=l("LC_"),ur=l(" variables"),ul=f(),ze=a("p"),hr=l("Ever tried copy-pasting some non-English (let\u2019s say Hindi) characters from some webpage to your terminal, or tried printing them to your console? You\u2019ll notice that they\u2019ll work."),hl=f(),K=a("p"),mr=l("Who tells your system to expect "),lo=a("code"),vr=l("UTF-8"),yr=l(" encoded characters, and more importantly, how can you change this behavior?"),ml=f(),Ke=a("h3"),Er=l("A small experiment"),vl=f(),Qe=a("p"),_r=l("Let\u2019s try to answer these questions with an experiment."),yl=f(),b=a("ol"),so=a("li"),wr=l("Open a new terminal instance."),br=f(),Xe=a("li"),Cr=l("Copy \u{1F602}\xA0to your terminal. "),ao=a("ol"),ro=a("li"),Ar=l("If you\u2019re using modern OS, you\u2019ll notice that the emoji gets copied perfectly."),Ir=f(),pe=a("li"),Lr=l("Run "),io=a("code"),Tr=l("export LC_ALL=C"),Or=l(" in your terminal."),kr=f(),Ze=a("li"),Sr=l("Copy \u{1F602}\xA0again and paste it into your terminal. "),ue=a("ol"),no=a("li"),Dr=l("This time you\u2019ll notice that emoji doesn\u2019t get copied."),Ur=f(),he=a("li"),xr=l("Instead, something like "),co=a("code"),Pr=l("\uFFFD<009f><0098><0082>"),Fr=l(" shows up."),El=f(),Q=a("p"),Hr=l("P.S.: Yes, emojis are also characters having some "),fo=a("code"),jr=l("Unicode"),Br=l(" representation \u{1F61B}"),_l=f(),Je=a("h3"),qr=l("Explanation"),wl=f(),X=a("p"),Rr=l("So, what happened when we ran "),po=a("code"),Nr=l("export LC_ALL=C"),Mr=l("?"),bl=f(),Ve=a("p"),Gr=l("Unix/Unix-like systems have multiple environmental variables which control settings related to locale. Things like the format to show dates, the default currency, the default address format, telephone format, etc can be controlled using by setting these environment variables.  This also includes how to interpret and print characters on your terminal."),Cl=f(),Z=a("p"),Yr=l("These variables are initialized while installing your OS. If your OS is modern, then by default, they use some UTF-8 encoding. All of these variables can be set individually or can be set at once using the "),uo=a("code"),Wr=l("LC_ALL"),$r=l(" variable."),Al=f(),D=a("p"),zr=l("The moment you set "),ho=a("code"),Kr=l("LC_ALL=C"),Qr=l(", your system locale got changed to "),mo=a("code"),Xr=l("C"),Zr=l(", which is the simplest locale. It uses ASCII for encoding the characters. And since ASCII can\u2019t represent \u{1F602}\xA0(an emoji), you end up seeing the mysterious values."),Il=f(),C=a("p"),Jr=l("Run "),vo=a("code"),Vr=l("export LC_ALL=en_GB.UTF-8"),gr=l(" in your terminal and copy \u{1F602}\xA0again. This time you\u2019ll see the emoji. Why? Because you changed your system locale back to "),yo=a("code"),ei=l("en_GB.UTF-8"),ti=l(", which uses UTF-8 encoding. (This assumes that you have "),Eo=a("code"),oi=l("en_GB"),li=l(" locale available on your system.)"),Ll=f(),me=a("h2"),si=l("Tying everything together: Speeding up "),_o=a("code"),ai=l("grep"),Tl=f(),ge=a("p"),ri=l("When you run"),Ol=f(),ve=a("pre"),kl=f(),U=a("p"),ii=l("without explicitly specifying any locale, "),wo=a("code"),ni=l("grep"),ci=l(" assumes that the file "),bo=a("code"),fi=l("in.fasta"),di=l(" contains UTF-8 encoded characters."),Sl=f(),et=a("p"),pi=l("Instead, if you run"),Dl=f(),ye=a("pre"),Ul=f(),x=a("p"),ui=l(", "),Co=a("code"),hi=l("grep"),mi=l(" assumes that "),Ao=a("code"),vi=l("in.fasta"),yi=l(" only contains ASCII characters, which is essentially true for most of the use cases in bioinformatics."),xl=f(),tt=a("blockquote"),Ee=a("p"),Ei=l("You may ask what\u2019s the difference between these two cases? The answer lies in the number of characters encoded by UTF-8 and ASCII. UTF-8 encodes over a million characters, while ASCII encodes only 128. And hence, "),Io=a("code"),_i=l("grep"),wi=l(" has to do a lot less processing when it knows that the file contains only ASCII data."),Pl=f(),R=a("p"),bi=l("And due to this, just by simply adding an "),Lo=a("code"),Ci=l("export"),Ai=l(" statement, you can speed up your grep execution by over "),To=a("strong"),Ii=l("500%"),Fl=f(),_e=a("p"),Li=l("In order to get a detailed benchmark report, you can "),we=a("a"),Ti=l("visit this link"),Hl=f(),ot=a("h2"),Oi=l("Bonus points"),jl=f(),P=a("p"),ki=l("This trick can be used to speedup pretty much any tool which relies on string comparison. I\u2019ve personally used this trick to speedup my "),Oo=a("code"),Si=l("awk"),Di=l(" code for "),be=a("a"),Ui=l("splitting large SAM/BAM file by reference name"),xi=l("."),this.h()},l(e){p=r(e,"H2",{});var n=i(p);L=s(n,"Target Audience"),n.forEach(o),T=d(e),m=r(e,"UL",{});var Bl=i(m);u=r(Bl,"LI",{});var Ki=i(u);I=s(Ki,"You know what a FASTA file looks like"),Ki.forEach(o),Ie=d(Bl),te=r(Bl,"LI",{});var ql=i(te);gl=s(ql,"You know the "),ft=r(ql,"EM",{});var Qi=i(ft);es=s(Qi,"bits and bytes"),Qi.forEach(o),ts=s(ql," of storage (pun intended \u{1F61B})"),ql.forEach(o),Bl.forEach(o),xo=d(e),Le=r(e,"H2",{});var Xi=i(Le);os=s(Xi,"TL;DR"),Xi.forEach(o),Po=d(e),Te=r(e,"P",{});var Zi=i(Te);ls=s(Zi,"Run"),Zi.forEach(o),Fo=d(e),oe=r(e,"PRE",{class:!0});var Qc=i(oe);Qc.forEach(o),Ho=d(e),le=r(e,"P",{});var Pi=i(le);ss=s(Pi,"before running your grep statement. Based on your system settings, this might give you a speedup of "),dt=r(Pi,"STRONG",{});var Ji=i(dt);as=s(Ji,">500%."),Ji.forEach(o),Pi.forEach(o),jo=d(e),se=r(e,"H2",{});var Fi=i(se);rs=s(Fi,"A quick intro to "),pt=r(Fi,"CODE",{});var Vi=i(pt);is=s(Vi,"grep"),Vi.forEach(o),Fi.forEach(o),Bo=d(e),ae=r(e,"P",{});var Hi=i(ae);ut=r(Hi,"CODE",{});var gi=i(ut);ns=s(gi,"grep"),gi.forEach(o),cs=s(Hi," is a GNU utility used for searching files for lines that match a given set of patterns. For example, if you wish to retrieve all the headers in a FASTA file, you can do"),Hi.forEach(o),qo=d(e),re=r(e,"PRE",{class:!0});var Xc=i(re);Xc.forEach(o),Ro=d(e),O=r(e,"P",{});var lt=i(O);fs=s(lt,"This will retrieve all the lines that contain the character "),ht=r(lt,"CODE",{});var en=i(ht);ds=s(en,">"),en.forEach(o),ps=s(lt,". Since all the FASTA headers start with "),mt=r(lt,"CODE",{});var tn=i(mt);us=s(tn,">"),tn.forEach(o),hs=s(lt,", this will retrieve all the FASTA headers."),lt.forEach(o),No=d(e),k=r(e,"P",{});var st=i(k);ms=s(st,"Note that "),vt=r(st,"CODE",{});var on=i(vt);vs=s(on,">"),on.forEach(o),ys=s(st," can\u2019t occur anywhere else in the FASTA file, apart from the header. Hence, it is guaranteed that only headers will be returned. We can specify a better search pattern, which will restrict the search to return only the lines which start with "),yt=r(st,"CODE",{});var ln=i(yt);Es=s(ln,">"),ln.forEach(o),_s=s(st,", but that\u2019s out of scope for this article."),st.forEach(o),Mo=d(e),Oe=r(e,"H2",{});var sn=i(Oe);ws=s(sn,"A quick intro to encodings"),sn.forEach(o),Go=d(e),ke=r(e,"P",{});var an=i(ke);bs=s(an,"Encodings are a way to represent characters in numbers so that they can be understood by a machine. For example, Assume you (arbitrarily) declare that"),an.forEach(o),Yo=d(e),v=r(e,"UL",{});var J=i(v);Se=r(J,"LI",{});var ji=i(Se);Et=r(ji,"CODE",{});var rn=i(Et);Cs=s(rn,"A"),rn.forEach(o),As=s(ji," is represented as 65"),ji.forEach(o),Is=d(J),De=r(J,"LI",{});var Bi=i(De);_t=r(Bi,"CODE",{});var nn=i(_t);Ls=s(nn,"H"),nn.forEach(o),Ts=s(Bi," is represented as 72"),Bi.forEach(o),Os=d(J),Ue=r(J,"LI",{});var qi=i(Ue);wt=r(qi,"CODE",{});var cn=i(wt);ks=s(cn,"a"),cn.forEach(o),Ss=s(qi," is represented as 97"),qi.forEach(o),Ds=d(J),xe=r(J,"LI",{});var Ri=i(xe);bt=r(Ri,"CODE",{});var fn=i(bt);Us=s(fn,"h"),fn.forEach(o),xs=s(Ri," is represented as 104"),Ri.forEach(o),J.forEach(o),Wo=d(e),H=r(e,"P",{});var ko=i(H);Ps=s(ko,"Then, your computer will understand "),Ct=r(ko,"CODE",{});var dn=i(Ct);Fs=s(dn,"HahA"),dn.forEach(o),Hs=s(ko," as "),At=r(ko,"CODE",{});var pn=i(At);js=s(pn,"72 97 104 65"),pn.forEach(o),ko.forEach(o),$o=d(e),Pe=r(e,"P",{});var un=i(Pe);Bs=s(un,"Note:"),un.forEach(o),zo=d(e),Y=r(e,"UL",{});var Rl=i(Y);It=r(Rl,"LI",{});var hn=i(It);qs=s(hn,"Spaces around numbers are just for illustrative purposes"),hn.forEach(o),Rs=d(Rl),j=r(Rl,"LI",{});var at=i(j);Ns=s(at,"The computer will finally store the values in binary format, as it only understands "),Lt=r(at,"CODE",{});var mn=i(Lt);Ms=s(mn,"0s"),mn.forEach(o),Gs=s(at," and "),Tt=r(at,"CODE",{});var vn=i(Tt);Ys=s(vn,"1s"),vn.forEach(o),Ws=s(at,". How to calculate binary representation of a given integer is a topic for a separate day"),at.forEach(o),Rl.forEach(o),Ko=d(e),Fe=r(e,"H2",{});var yn=i(Fe);$s=s(yn,"ASCII Encoding"),yn.forEach(o),Qo=d(e),He=r(e,"P",{});var En=i(He);zs=s(En,"ASCII is one of the simplest and most common encodings currently in use. It encodes 128 different characters i.e. assigns integer values to 128 different characters."),En.forEach(o),Xo=d(e),je=r(e,"P",{});var _n=i(je);ie=r(_n,"A",{href:!0,rel:!0});var wn=i(ie);Ks=s(wn,"Click here to see the whole table"),wn.forEach(o),_n.forEach(o),Zo=d(e),Be=r(e,"P",{});var bn=i(Be);Qs=s(bn,"In a nutshell,"),bn.forEach(o),Jo=d(e),h=r(e,"UL",{});var F=i(h);y=r(F,"LI",{});var N=i(y);Ot=r(N,"CODE",{});var Cn=i(Ot);Xs=s(Cn,"A"),Cn.forEach(o),Zs=s(N," is represented as 65, "),kt=r(N,"CODE",{});var An=i(kt);Js=s(An,"B"),An.forEach(o),Vs=s(N," as 66, "),St=r(N,"CODE",{});var In=i(St);gs=s(In,"C"),In.forEach(o),ea=s(N," as 67 \u2026 "),Dt=r(N,"CODE",{});var Ln=i(Dt);ta=s(Ln,"Z"),Ln.forEach(o),oa=s(N," as 90"),N.forEach(o),la=d(F),E=r(F,"LI",{});var M=i(E);Ut=r(M,"CODE",{});var Tn=i(Ut);sa=s(Tn,"a"),Tn.forEach(o),aa=s(M," is represented as 97, "),xt=r(M,"CODE",{});var On=i(xt);ra=s(On,"b"),On.forEach(o),ia=s(M," as 98, "),Pt=r(M,"CODE",{});var kn=i(Pt);na=s(kn,"c"),kn.forEach(o),ca=s(M," as 99 \u2026 "),Ft=r(M,"CODE",{});var Sn=i(Ft);fa=s(Sn,"z"),Sn.forEach(o),da=s(M," as 122"),M.forEach(o),pa=d(F),S=r(F,"LI",{});var Ce=i(S);Ht=r(Ce,"CODE",{});var Dn=i(Ht);ua=s(Dn,"0"),Dn.forEach(o),ha=s(Ce," is represented as 48, "),jt=r(Ce,"CODE",{});var Un=i(jt);ma=s(Un,"1"),Un.forEach(o),va=s(Ce," as 49 \u2026 "),Bt=r(Ce,"CODE",{});var xn=i(Bt);ya=s(xn,"9"),xn.forEach(o),Ea=s(Ce," as 57"),Ce.forEach(o),_a=d(F),qt=r(F,"LI",{});var Pn=i(qt);wa=s(Pn,"Other numbers represent things like space, enter key, backspace, symbols (+, -, etc.) escape sequences (newlines, tabs, null character, etc)."),Pn.forEach(o),ba=d(F),Rt=r(F,"LI",{});var Fn=i(Rt);Ca=s(Fn,"Every ASCII encoded character takes exactly 1 byte of memory."),Fn.forEach(o),F.forEach(o),Vo=d(e),qe=r(e,"H2",{});var Hn=i(qe);Aa=s(Hn,"Unicode Character Set"),Hn.forEach(o),go=d(e),_=r(e,"P",{});var V=i(_);Ia=s(V,"If you\u2019ve heard anything about encoding, then you must\u2019ve heard about "),Nt=r(V,"CODE",{});var jn=i(Nt);La=s(jn,"Unicode"),jn.forEach(o),Ta=s(V,". The need for "),Mt=r(V,"CODE",{});var Bn=i(Mt);Oa=s(Bn,"Unicode"),Bn.forEach(o),ka=s(V," arose because "),Gt=r(V,"CODE",{});var qn=i(Gt);Sa=s(qn,"ASCII"),qn.forEach(o),Da=s(V," wasn\u2019t designed to handle more than 128 characters."),V.forEach(o),el=d(e),B=r(e,"P",{});var So=i(B);Yt=r(So,"CODE",{});var Rn=i(Yt);Ua=s(Rn,"ASCII"),Rn.forEach(o),xa=s(So," worked perfectly in the 60s and 70s as there were very few computers and even fewer groups using computers. But, with the advent of the internet, and the widespread adoption of computers in different parts of the world, encoding different character sets became a major requirement. For example, computers had no way of understanding Hindi characters like \u0905, \u0906, etc. We needed a way to encode them, and "),Wt=r(So,"CODE",{});var Nn=i(Wt);Pa=s(Nn,"Unicode"),Nn.forEach(o),Fa=s(So," provided a way to do just that. It simply mapped a given character to some unique number."),So.forEach(o),tl=d(e),q=r(e,"P",{});var Do=i(q);$t=r(Do,"STRONG",{});var Mn=i($t);Ha=s(Mn,"Note"),Mn.forEach(o),ja=s(Do,": "),zt=r(Do,"CODE",{});var Gn=i(zt);Ba=s(Gn,"Unicode"),Gn.forEach(o),qa=s(Do," doesn\u2019t contain every character from every language."),Do.forEach(o),ol=d(e),Re=r(e,"H2",{});var Yn=i(Re);Ra=s(Yn,"UTF-8 encoding"),Yn.forEach(o),ll=d(e),W=r(e,"P",{});var Nl=i(W);Na=s(Nl,"As mentioned above, "),Kt=r(Nl,"CODE",{});var Wn=i(Kt);Ma=s(Wn,"Unicode"),Wn.forEach(o),Ga=s(Nl," just maps a character to a number. It does not specify how that number is stored in the computer. For example, let\u2019s say we decide to"),Nl.forEach(o),sl=d(e),$=r(e,"UL",{});var Ml=i($);ne=r(Ml,"LI",{});var Gl=i(ne);Ya=s(Gl,"Represent "),Qt=r(Gl,"CODE",{});var $n=i(Qt);Wa=s($n,"A"),$n.forEach(o),$a=s(Gl," as 65"),Gl.forEach(o),za=d(Ml),ce=r(Ml,"LI",{});var Yl=i(ce);Ka=s(Yl,"Represent "),Xt=r(Yl,"CODE",{});var zn=i(Xt);Qa=s(zn,"\u0906"),zn.forEach(o),Xa=s(Yl," as 995."),Yl.forEach(o),Ml.forEach(o),al=d(e),Ne=r(e,"P",{});var Kn=i(Ne);Za=s(Kn,"Now, assuming a byte is an absolute unit of storage, You can store"),Kn.forEach(o),rl=d(e),z=r(e,"UL",{});var Wl=i(z);w=r(Wl,"LI",{});var G=i(w);Zt=r(G,"CODE",{});var Qn=i(Zt);Ja=s(Qn,"A"),Qn.forEach(o),Va=s(G," using 1 byte and "),Jt=r(G,"CODE",{});var Xn=i(Jt);ga=s(Xn,"\u0906"),Xn.forEach(o),er=s(G," using 2 bytes. (As "),Vt=r(G,"CODE",{});var Zn=i(Vt);tr=s(Zn,"65 < 256"),Zn.forEach(o),or=s(G,", and "),gt=r(G,"CODE",{});var Jn=i(gt);lr=s(Jn,"256 < 995 < 256 * 256"),Jn.forEach(o),sr=s(G," )"),G.forEach(o),ar=d(Wl),eo=r(Wl,"LI",{});var Vn=i(eo);rr=s(Vn,"both using 2 bytes. In this case, you\u2019ll waste 1 extra byte while storing A"),Vn.forEach(o),Wl.forEach(o),il=d(e),Me=r(e,"P",{});var gn=i(Me);ir=s(gn,"The point of this example was to show that one Unicode character can be stored in multiple ways."),gn.forEach(o),nl=d(e),Ge=r(e,"BLOCKQUOTE",{});var ec=i(Ge);to=r(ec,"P",{});var tc=i(to);nr=s(tc,"UTF-8 is one of the ways to store Unicode characters. It is designed to encode millions of characters, while ASCII only encodes 128 characters."),tc.forEach(o),ec.forEach(o),cl=d(e),Ye=r(e,"P",{});var oc=i(Ye);cr=s(oc,"Another thing to note about UTF-8 is it is compatible with ASCII i.e. any ASCII encoded character is a valid UTF-8 encoded character."),oc.forEach(o),fl=d(e),We=r(e,"P",{});var lc=i(We);fr=s(lc,"If you\u2019re a software engineer or are really psyched up about encodings, you should definitely read the following blog post"),lc.forEach(o),dl=d(e),$e=r(e,"P",{});var sc=i($e);fe=r(sc,"A",{href:!0,rel:!0});var ac=i(fe);dr=s(ac,"The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets (No Excuses!)"),ac.forEach(o),sc.forEach(o),pl=d(e),de=r(e,"H2",{});var Ni=i(de);oo=r(Ni,"CODE",{});var rc=i(oo);pr=s(rc,"LC_"),rc.forEach(o),ur=s(Ni," variables"),Ni.forEach(o),ul=d(e),ze=r(e,"P",{});var ic=i(ze);hr=s(ic,"Ever tried copy-pasting some non-English (let\u2019s say Hindi) characters from some webpage to your terminal, or tried printing them to your console? You\u2019ll notice that they\u2019ll work."),ic.forEach(o),hl=d(e),K=r(e,"P",{});var $l=i(K);mr=s($l,"Who tells your system to expect "),lo=r($l,"CODE",{});var nc=i(lo);vr=s(nc,"UTF-8"),nc.forEach(o),yr=s($l," encoded characters, and more importantly, how can you change this behavior?"),$l.forEach(o),ml=d(e),Ke=r(e,"H3",{});var cc=i(Ke);Er=s(cc,"A small experiment"),cc.forEach(o),vl=d(e),Qe=r(e,"P",{});var fc=i(Qe);_r=s(fc,"Let\u2019s try to answer these questions with an experiment."),fc.forEach(o),yl=d(e),b=r(e,"OL",{});var g=i(b);so=r(g,"LI",{});var dc=i(so);wr=s(dc,"Open a new terminal instance."),dc.forEach(o),br=d(g),Xe=r(g,"LI",{});var Mi=i(Xe);Cr=s(Mi,"Copy \u{1F602}\xA0to your terminal. "),ao=r(Mi,"OL",{});var pc=i(ao);ro=r(pc,"LI",{});var uc=i(ro);Ar=s(uc,"If you\u2019re using modern OS, you\u2019ll notice that the emoji gets copied perfectly."),uc.forEach(o),pc.forEach(o),Mi.forEach(o),Ir=d(g),pe=r(g,"LI",{});var zl=i(pe);Lr=s(zl,"Run "),io=r(zl,"CODE",{});var hc=i(io);Tr=s(hc,"export LC_ALL=C"),hc.forEach(o),Or=s(zl," in your terminal."),zl.forEach(o),kr=d(g),Ze=r(g,"LI",{});var Gi=i(Ze);Sr=s(Gi,"Copy \u{1F602}\xA0again and paste it into your terminal. "),ue=r(Gi,"OL",{});var Kl=i(ue);no=r(Kl,"LI",{});var mc=i(no);Dr=s(mc,"This time you\u2019ll notice that emoji doesn\u2019t get copied."),mc.forEach(o),Ur=d(Kl),he=r(Kl,"LI",{});var Ql=i(he);xr=s(Ql,"Instead, something like "),co=r(Ql,"CODE",{});var vc=i(co);Pr=s(vc,"\uFFFD<009f><0098><0082>"),vc.forEach(o),Fr=s(Ql," shows up."),Ql.forEach(o),Kl.forEach(o),Gi.forEach(o),g.forEach(o),El=d(e),Q=r(e,"P",{});var Xl=i(Q);Hr=s(Xl,"P.S.: Yes, emojis are also characters having some "),fo=r(Xl,"CODE",{});var yc=i(fo);jr=s(yc,"Unicode"),yc.forEach(o),Br=s(Xl," representation \u{1F61B}"),Xl.forEach(o),_l=d(e),Je=r(e,"H3",{});var Ec=i(Je);qr=s(Ec,"Explanation"),Ec.forEach(o),wl=d(e),X=r(e,"P",{});var Zl=i(X);Rr=s(Zl,"So, what happened when we ran "),po=r(Zl,"CODE",{});var _c=i(po);Nr=s(_c,"export LC_ALL=C"),_c.forEach(o),Mr=s(Zl,"?"),Zl.forEach(o),bl=d(e),Ve=r(e,"P",{});var wc=i(Ve);Gr=s(wc,"Unix/Unix-like systems have multiple environmental variables which control settings related to locale. Things like the format to show dates, the default currency, the default address format, telephone format, etc can be controlled using by setting these environment variables.  This also includes how to interpret and print characters on your terminal."),wc.forEach(o),Cl=d(e),Z=r(e,"P",{});var Jl=i(Z);Yr=s(Jl,"These variables are initialized while installing your OS. If your OS is modern, then by default, they use some UTF-8 encoding. All of these variables can be set individually or can be set at once using the "),uo=r(Jl,"CODE",{});var bc=i(uo);Wr=s(bc,"LC_ALL"),bc.forEach(o),$r=s(Jl," variable."),Jl.forEach(o),Al=d(e),D=r(e,"P",{});var rt=i(D);zr=s(rt,"The moment you set "),ho=r(rt,"CODE",{});var Cc=i(ho);Kr=s(Cc,"LC_ALL=C"),Cc.forEach(o),Qr=s(rt,", your system locale got changed to "),mo=r(rt,"CODE",{});var Ac=i(mo);Xr=s(Ac,"C"),Ac.forEach(o),Zr=s(rt,", which is the simplest locale. It uses ASCII for encoding the characters. And since ASCII can\u2019t represent \u{1F602}\xA0(an emoji), you end up seeing the mysterious values."),rt.forEach(o),Il=d(e),C=r(e,"P",{});var ee=i(C);Jr=s(ee,"Run "),vo=r(ee,"CODE",{});var Ic=i(vo);Vr=s(Ic,"export LC_ALL=en_GB.UTF-8"),Ic.forEach(o),gr=s(ee," in your terminal and copy \u{1F602}\xA0again. This time you\u2019ll see the emoji. Why? Because you changed your system locale back to "),yo=r(ee,"CODE",{});var Lc=i(yo);ei=s(Lc,"en_GB.UTF-8"),Lc.forEach(o),ti=s(ee,", which uses UTF-8 encoding. (This assumes that you have "),Eo=r(ee,"CODE",{});var Tc=i(Eo);oi=s(Tc,"en_GB"),Tc.forEach(o),li=s(ee," locale available on your system.)"),ee.forEach(o),Ll=d(e),me=r(e,"H2",{});var Yi=i(me);si=s(Yi,"Tying everything together: Speeding up "),_o=r(Yi,"CODE",{});var Oc=i(_o);ai=s(Oc,"grep"),Oc.forEach(o),Yi.forEach(o),Tl=d(e),ge=r(e,"P",{});var kc=i(ge);ri=s(kc,"When you run"),kc.forEach(o),Ol=d(e),ve=r(e,"PRE",{class:!0});var Zc=i(ve);Zc.forEach(o),kl=d(e),U=r(e,"P",{});var it=i(U);ii=s(it,"without explicitly specifying any locale, "),wo=r(it,"CODE",{});var Sc=i(wo);ni=s(Sc,"grep"),Sc.forEach(o),ci=s(it," assumes that the file "),bo=r(it,"CODE",{});var Dc=i(bo);fi=s(Dc,"in.fasta"),Dc.forEach(o),di=s(it," contains UTF-8 encoded characters."),it.forEach(o),Sl=d(e),et=r(e,"P",{});var Uc=i(et);pi=s(Uc,"Instead, if you run"),Uc.forEach(o),Dl=d(e),ye=r(e,"PRE",{class:!0});var Jc=i(ye);Jc.forEach(o),Ul=d(e),x=r(e,"P",{});var nt=i(x);ui=s(nt,", "),Co=r(nt,"CODE",{});var xc=i(Co);hi=s(xc,"grep"),xc.forEach(o),mi=s(nt," assumes that "),Ao=r(nt,"CODE",{});var Pc=i(Ao);vi=s(Pc,"in.fasta"),Pc.forEach(o),yi=s(nt," only contains ASCII characters, which is essentially true for most of the use cases in bioinformatics."),nt.forEach(o),xl=d(e),tt=r(e,"BLOCKQUOTE",{});var Fc=i(tt);Ee=r(Fc,"P",{});var Vl=i(Ee);Ei=s(Vl,"You may ask what\u2019s the difference between these two cases? The answer lies in the number of characters encoded by UTF-8 and ASCII. UTF-8 encodes over a million characters, while ASCII encodes only 128. And hence, "),Io=r(Vl,"CODE",{});var Hc=i(Io);_i=s(Hc,"grep"),Hc.forEach(o),wi=s(Vl," has to do a lot less processing when it knows that the file contains only ASCII data."),Vl.forEach(o),Fc.forEach(o),Pl=d(e),R=r(e,"P",{});var Uo=i(R);bi=s(Uo,"And due to this, just by simply adding an "),Lo=r(Uo,"CODE",{});var jc=i(Lo);Ci=s(jc,"export"),jc.forEach(o),Ai=s(Uo," statement, you can speed up your grep execution by over "),To=r(Uo,"STRONG",{});var Bc=i(To);Ii=s(Bc,"500%"),Bc.forEach(o),Uo.forEach(o),Fl=d(e),_e=r(e,"P",{});var Wi=i(_e);Li=s(Wi,"In order to get a detailed benchmark report, you can "),we=r(Wi,"A",{href:!0,rel:!0});var qc=i(we);Ti=s(qc,"visit this link"),qc.forEach(o),Wi.forEach(o),Hl=d(e),ot=r(e,"H2",{});var Rc=i(ot);Oi=s(Rc,"Bonus points"),Rc.forEach(o),jl=d(e),P=r(e,"P",{});var ct=i(P);ki=s(ct,"This trick can be used to speedup pretty much any tool which relies on string comparison. I\u2019ve personally used this trick to speedup my "),Oo=r(ct,"CODE",{});var Nc=i(Oo);Si=s(Nc,"awk"),Nc.forEach(o),Di=s(ct," code for "),be=r(ct,"A",{href:!0,rel:!0});var Mc=i(be);Ui=s(Mc,"splitting large SAM/BAM file by reference name"),Mc.forEach(o),xi=s(ct,"."),ct.forEach(o),this.h()},h(){A(oe,"class","language-bash"),A(re,"class","language-bash"),A(ie,"href","https://www.cs.cmu.edu/~pattis/15-1XX/common/handouts/ascii.html"),A(ie,"rel","nofollow"),A(fe,"href","https://www.joelonsoftware.com/2003/10/08/the-absolute-minimum-every-software-developer-absolutely-positively-must-know-about-unicode-and-character-sets-no-excuses/"),A(fe,"rel","nofollow"),A(ve,"class","language-bash"),A(ye,"class","language-bash"),A(we,"href","https://www.inmotionhosting.com/support/website/speed-up-grep-searches-with-lc-all/"),A(we,"rel","nofollow"),A(be,"href","https://2403tales.com/posts/efficiently-splitting-sam-or-bam-file-by-reference-name-using-awk"),A(be,"rel","nofollow")},m(e,n){c(e,p,n),t(p,L),c(e,T,n),c(e,m,n),t(m,u),t(u,I),t(m,Ie),t(m,te),t(te,gl),t(te,ft),t(ft,es),t(te,ts),c(e,xo,n),c(e,Le,n),t(Le,os),c(e,Po,n),c(e,Te,n),t(Te,ls),c(e,Fo,n),c(e,oe,n),oe.innerHTML=Wc,c(e,Ho,n),c(e,le,n),t(le,ss),t(le,dt),t(dt,as),c(e,jo,n),c(e,se,n),t(se,rs),t(se,pt),t(pt,is),c(e,Bo,n),c(e,ae,n),t(ae,ut),t(ut,ns),t(ae,cs),c(e,qo,n),c(e,re,n),re.innerHTML=$c,c(e,Ro,n),c(e,O,n),t(O,fs),t(O,ht),t(ht,ds),t(O,ps),t(O,mt),t(mt,us),t(O,hs),c(e,No,n),c(e,k,n),t(k,ms),t(k,vt),t(vt,vs),t(k,ys),t(k,yt),t(yt,Es),t(k,_s),c(e,Mo,n),c(e,Oe,n),t(Oe,ws),c(e,Go,n),c(e,ke,n),t(ke,bs),c(e,Yo,n),c(e,v,n),t(v,Se),t(Se,Et),t(Et,Cs),t(Se,As),t(v,Is),t(v,De),t(De,_t),t(_t,Ls),t(De,Ts),t(v,Os),t(v,Ue),t(Ue,wt),t(wt,ks),t(Ue,Ss),t(v,Ds),t(v,xe),t(xe,bt),t(bt,Us),t(xe,xs),c(e,Wo,n),c(e,H,n),t(H,Ps),t(H,Ct),t(Ct,Fs),t(H,Hs),t(H,At),t(At,js),c(e,$o,n),c(e,Pe,n),t(Pe,Bs),c(e,zo,n),c(e,Y,n),t(Y,It),t(It,qs),t(Y,Rs),t(Y,j),t(j,Ns),t(j,Lt),t(Lt,Ms),t(j,Gs),t(j,Tt),t(Tt,Ys),t(j,Ws),c(e,Ko,n),c(e,Fe,n),t(Fe,$s),c(e,Qo,n),c(e,He,n),t(He,zs),c(e,Xo,n),c(e,je,n),t(je,ie),t(ie,Ks),c(e,Zo,n),c(e,Be,n),t(Be,Qs),c(e,Jo,n),c(e,h,n),t(h,y),t(y,Ot),t(Ot,Xs),t(y,Zs),t(y,kt),t(kt,Js),t(y,Vs),t(y,St),t(St,gs),t(y,ea),t(y,Dt),t(Dt,ta),t(y,oa),t(h,la),t(h,E),t(E,Ut),t(Ut,sa),t(E,aa),t(E,xt),t(xt,ra),t(E,ia),t(E,Pt),t(Pt,na),t(E,ca),t(E,Ft),t(Ft,fa),t(E,da),t(h,pa),t(h,S),t(S,Ht),t(Ht,ua),t(S,ha),t(S,jt),t(jt,ma),t(S,va),t(S,Bt),t(Bt,ya),t(S,Ea),t(h,_a),t(h,qt),t(qt,wa),t(h,ba),t(h,Rt),t(Rt,Ca),c(e,Vo,n),c(e,qe,n),t(qe,Aa),c(e,go,n),c(e,_,n),t(_,Ia),t(_,Nt),t(Nt,La),t(_,Ta),t(_,Mt),t(Mt,Oa),t(_,ka),t(_,Gt),t(Gt,Sa),t(_,Da),c(e,el,n),c(e,B,n),t(B,Yt),t(Yt,Ua),t(B,xa),t(B,Wt),t(Wt,Pa),t(B,Fa),c(e,tl,n),c(e,q,n),t(q,$t),t($t,Ha),t(q,ja),t(q,zt),t(zt,Ba),t(q,qa),c(e,ol,n),c(e,Re,n),t(Re,Ra),c(e,ll,n),c(e,W,n),t(W,Na),t(W,Kt),t(Kt,Ma),t(W,Ga),c(e,sl,n),c(e,$,n),t($,ne),t(ne,Ya),t(ne,Qt),t(Qt,Wa),t(ne,$a),t($,za),t($,ce),t(ce,Ka),t(ce,Xt),t(Xt,Qa),t(ce,Xa),c(e,al,n),c(e,Ne,n),t(Ne,Za),c(e,rl,n),c(e,z,n),t(z,w),t(w,Zt),t(Zt,Ja),t(w,Va),t(w,Jt),t(Jt,ga),t(w,er),t(w,Vt),t(Vt,tr),t(w,or),t(w,gt),t(gt,lr),t(w,sr),t(z,ar),t(z,eo),t(eo,rr),c(e,il,n),c(e,Me,n),t(Me,ir),c(e,nl,n),c(e,Ge,n),t(Ge,to),t(to,nr),c(e,cl,n),c(e,Ye,n),t(Ye,cr),c(e,fl,n),c(e,We,n),t(We,fr),c(e,dl,n),c(e,$e,n),t($e,fe),t(fe,dr),c(e,pl,n),c(e,de,n),t(de,oo),t(oo,pr),t(de,ur),c(e,ul,n),c(e,ze,n),t(ze,hr),c(e,hl,n),c(e,K,n),t(K,mr),t(K,lo),t(lo,vr),t(K,yr),c(e,ml,n),c(e,Ke,n),t(Ke,Er),c(e,vl,n),c(e,Qe,n),t(Qe,_r),c(e,yl,n),c(e,b,n),t(b,so),t(so,wr),t(b,br),t(b,Xe),t(Xe,Cr),t(Xe,ao),t(ao,ro),t(ro,Ar),t(b,Ir),t(b,pe),t(pe,Lr),t(pe,io),t(io,Tr),t(pe,Or),t(b,kr),t(b,Ze),t(Ze,Sr),t(Ze,ue),t(ue,no),t(no,Dr),t(ue,Ur),t(ue,he),t(he,xr),t(he,co),t(co,Pr),t(he,Fr),c(e,El,n),c(e,Q,n),t(Q,Hr),t(Q,fo),t(fo,jr),t(Q,Br),c(e,_l,n),c(e,Je,n),t(Je,qr),c(e,wl,n),c(e,X,n),t(X,Rr),t(X,po),t(po,Nr),t(X,Mr),c(e,bl,n),c(e,Ve,n),t(Ve,Gr),c(e,Cl,n),c(e,Z,n),t(Z,Yr),t(Z,uo),t(uo,Wr),t(Z,$r),c(e,Al,n),c(e,D,n),t(D,zr),t(D,ho),t(ho,Kr),t(D,Qr),t(D,mo),t(mo,Xr),t(D,Zr),c(e,Il,n),c(e,C,n),t(C,Jr),t(C,vo),t(vo,Vr),t(C,gr),t(C,yo),t(yo,ei),t(C,ti),t(C,Eo),t(Eo,oi),t(C,li),c(e,Ll,n),c(e,me,n),t(me,si),t(me,_o),t(_o,ai),c(e,Tl,n),c(e,ge,n),t(ge,ri),c(e,Ol,n),c(e,ve,n),ve.innerHTML=zc,c(e,kl,n),c(e,U,n),t(U,ii),t(U,wo),t(wo,ni),t(U,ci),t(U,bo),t(bo,fi),t(U,di),c(e,Sl,n),c(e,et,n),t(et,pi),c(e,Dl,n),c(e,ye,n),ye.innerHTML=Kc,c(e,Ul,n),c(e,x,n),t(x,ui),t(x,Co),t(Co,hi),t(x,mi),t(x,Ao),t(Ao,vi),t(x,yi),c(e,xl,n),c(e,tt,n),t(tt,Ee),t(Ee,Ei),t(Ee,Io),t(Io,_i),t(Ee,wi),c(e,Pl,n),c(e,R,n),t(R,bi),t(R,Lo),t(Lo,Ci),t(R,Ai),t(R,To),t(To,Ii),c(e,Fl,n),c(e,_e,n),t(_e,Li),t(_e,we),t(we,Ti),c(e,Hl,n),c(e,ot,n),t(ot,Oi),c(e,jl,n),c(e,P,n),t(P,ki),t(P,Oo),t(Oo,Si),t(P,Di),t(P,be),t(be,Ui),t(P,xi)},p:cf,d(e){e&&o(p),e&&o(T),e&&o(m),e&&o(xo),e&&o(Le),e&&o(Po),e&&o(Te),e&&o(Fo),e&&o(oe),e&&o(Ho),e&&o(le),e&&o(jo),e&&o(se),e&&o(Bo),e&&o(ae),e&&o(qo),e&&o(re),e&&o(Ro),e&&o(O),e&&o(No),e&&o(k),e&&o(Mo),e&&o(Oe),e&&o(Go),e&&o(ke),e&&o(Yo),e&&o(v),e&&o(Wo),e&&o(H),e&&o($o),e&&o(Pe),e&&o(zo),e&&o(Y),e&&o(Ko),e&&o(Fe),e&&o(Qo),e&&o(He),e&&o(Xo),e&&o(je),e&&o(Zo),e&&o(Be),e&&o(Jo),e&&o(h),e&&o(Vo),e&&o(qe),e&&o(go),e&&o(_),e&&o(el),e&&o(B),e&&o(tl),e&&o(q),e&&o(ol),e&&o(Re),e&&o(ll),e&&o(W),e&&o(sl),e&&o($),e&&o(al),e&&o(Ne),e&&o(rl),e&&o(z),e&&o(il),e&&o(Me),e&&o(nl),e&&o(Ge),e&&o(cl),e&&o(Ye),e&&o(fl),e&&o(We),e&&o(dl),e&&o($e),e&&o(pl),e&&o(de),e&&o(ul),e&&o(ze),e&&o(hl),e&&o(K),e&&o(ml),e&&o(Ke),e&&o(vl),e&&o(Qe),e&&o(yl),e&&o(b),e&&o(El),e&&o(Q),e&&o(_l),e&&o(Je),e&&o(wl),e&&o(X),e&&o(bl),e&&o(Ve),e&&o(Cl),e&&o(Z),e&&o(Al),e&&o(D),e&&o(Il),e&&o(C),e&&o(Ll),e&&o(me),e&&o(Tl),e&&o(ge),e&&o(Ol),e&&o(ve),e&&o(kl),e&&o(U),e&&o(Sl),e&&o(et),e&&o(Dl),e&&o(ye),e&&o(Ul),e&&o(x),e&&o(xl),e&&o(tt),e&&o(Pl),e&&o(R),e&&o(Fl),e&&o(_e),e&&o(Hl),e&&o(ot),e&&o(jl),e&&o(P)}}}function pf(Ae){let p,L;const T=[Ae[0],zi];let m={$$slots:{default:[df]},$$scope:{ctx:Ae}};for(let u=0;u<T.length;u+=1)m=$i(m,T[u]);return p=new ff({props:m}),{c(){tf(p.$$.fragment)},l(u){of(p.$$.fragment,u)},m(u,I){lf(p,u,I),L=!0},p(u,[I]){const Ie=I&1?sf(T,[I&1&&Gc(u[0]),I&0&&Gc(zi)]):{};I&2&&(Ie.$$scope={dirty:I,ctx:u}),p.$set(Ie)},i(u){L||(af(p.$$.fragment,u),L=!0)},o(u){rf(p.$$.fragment,u),L=!1},d(u){nf(p,u)}}}const zi={series:"Leveraging GNU Core utils in bioinfornmatics",title:"Leveraging encodings for speeding up grep",date:"21 March, 2022",categories:["GNU Tools","bioinformatics","encodings"],description:"An article explaining how to leverage encodings to improve grep performance by over 500%",author:"Prakash"};function uf(Ae,p,L){return Ae.$$set=T=>{L(0,p=$i($i({},p),Yc(T)))},p=Yc(p),[p]}class hf extends Vc{constructor(p){super();gc(this,p,uf,pf,ef,{})}}var yf=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:hf,metadata:zi});export{hf as L,yf as _,zi as m};
