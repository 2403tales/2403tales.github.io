import{S as Vn,i as Bn,s as Kn,C as vn,w as Qn,x as Wn,y as Xn,z as Zn,A as Cn,q as ns,o as ss,B as as,P as jn,e as o,t as m,k as c,c as p,a as i,h,d as s,m as u,b as an,g as t,I as l,M as ts}from"./vendor-e6930037.js";import{P as es}from"./_posts-39c49aba.js";function os(P){let e,y,d,f,r=`<code class="language-python"><span class="token keyword">def</span> <span class="token function">sample</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">return</span> x

<span class="token keyword">print</span><span class="token punctuation">(</span>sample<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># prints 5</span>

<span class="token comment"># However, you can do this too, to a function</span>
sample<span class="token punctuation">.</span>custom_attribute <span class="token operator">=</span> <span class="token number">10</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>sample<span class="token punctuation">.</span>custom_attribute<span class="token punctuation">)</span> <span class="token comment"># prints 10</span></code>`,k,_,tn,C,x,en,j,b,Dn=`<code class="language-python"><span class="token keyword">def</span> <span class="token function">run_only_once</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">if</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>run_only_once<span class="token punctuation">,</span> <span class="token string">'called'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
		<span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">'Can only be called once'</span><span class="token punctuation">)</span>
	<span class="token comment"># Your business logic here</span>
	run_only_once<span class="token punctuation">.</span>called <span class="token operator">=</span> <span class="token boolean">True</span> <span class="token comment"># Could be any value. The only condition is property should exist.</span>
	<span class="token keyword">return</span> <span class="token number">42</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>run_only_once<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># prints 42</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>run_only_once<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># raises ValueError</span></code>`,D,g,on,Y,S,pn,I,v,Yn=`<code class="language-python"><span class="token keyword">import</span> time
<span class="token keyword">def</span> <span class="token function">some_expensive_computation</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
		<span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>some_expensive_computation<span class="token punctuation">,</span> <span class="token string">'cache'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
			some_expensive_computation<span class="token punctuation">.</span>cache <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>
		y <span class="token operator">=</span> some_expensive_computation<span class="token punctuation">.</span>cache<span class="token punctuation">.</span>get<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
		<span class="token keyword">if</span> y<span class="token punctuation">:</span>
			<span class="token keyword">return</span> y
		<span class="token comment"># Do your business calculation here</span>
		time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
		some_expensive_computation<span class="token punctuation">.</span>cache<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">42</span>
		<span class="token keyword">return</span> <span class="token number">42</span>

some_expensive_computation<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment"># returns 42 after a second</span>
some_expensive_computation<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment"># returns 42 immediately</span></code>`,q,T,cn,F,L,un,G,O,ln,U,$,rn,V,z,mn,B,A,hn,K,E,In=`<code class="language-python"><span class="token keyword">def</span> <span class="token function">i_am_thanos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">if</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>i_am_thanos<span class="token punctuation">,</span> <span class="token string">'times_ran'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
		i_am_thanos<span class="token punctuation">.</span>times_ran <span class="token operator">+=</span> <span class="token number">1</span>
	<span class="token keyword">else</span><span class="token punctuation">:</span>
		i_am_thanos<span class="token punctuation">.</span>times_ran <span class="token operator">=</span> <span class="token number">1</span>
	<span class="token comment"># Your code here</span>
	<span class="token keyword">return</span> <span class="token number">42</span>

i_am_thanos<span class="token punctuation">(</span><span class="token punctuation">)</span>
i_am_thanos<span class="token punctuation">(</span><span class="token punctuation">)</span>
i_am_thanos<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>i_am_thanos<span class="token punctuation">.</span>times_ran<span class="token punctuation">)</span>  <span class="token comment"># prints 3</span></code>`,Q,J,kn,W,M,fn,X,H,yn,Z,w,dn,R,_n,wn,nn,N,bn;return{c(){e=o("p"),y=m("TIL that you can attach custom properties to a function in python. E.g."),d=c(),f=o("pre"),k=c(),_=o("p"),tn=m("This seems simple, but can be used to build useful things."),C=c(),x=o("p"),en=m("For example, if you want to run a function only once, here\u2019s how you can do it."),j=c(),b=o("pre"),D=c(),g=o("p"),on=m("This approach can be used to implement singleton pattern."),Y=c(),S=o("p"),pn=m("Or, if you wish to cache the results"),I=c(),v=o("pre"),q=c(),T=o("p"),cn=m("Note that caching functionality can be better achieved using decorators. Using the above approach will expose your underlying variables to everyone which is understandably undesirable in most cases, but might be helpful in certain cases. A practical use case is:"),F=c(),L=o("p"),un=m("Let\u2019s say you are developing a Machine Learning Pipeline to summarize the contents of a news article, and you don\u2019t want to parse the same news article twice. So you cached the results of your parsing module."),G=c(),O=o("p"),ln=m("However, later in your pipeline, you identify that some of the summaries are incorrect, and you want to update them manually in the cache itself so that the next time the same article is passed to the parser, the correct summaries come out."),U=c(),$=o("p"),rn=m("Now if you have access to the cache contents, someone can go update the summaries in a web portal, and you can inject the updated summaries back into the cache!"),V=c(),z=o("p"),mn=m("(Any sane developer would (and should) switch to some standard caching service at this point in time (say Redis), but if your use case is simple, and you don\u2019t want to introduce yet another service to your infrastructure, you can use this hack.)"),B=c(),A=o("p"),hn=m("Of course, You can use this to do silly simple things, like storing how many times a function runs (This might come in handy in profiling)"),K=c(),E=o("pre"),Q=c(),J=o("p"),kn=m("Or how much time did each function call take, or what buckets your integer arguments fall in etc."),W=c(),M=o("p"),fn=m("One downside of attaching custom properties on top of functions is, the code responsible for attaching the properties lives inside the function definition, which kind of pollutes the actual logic. Sure you can attach the properties after you\u2019ve defined the functions, but then your function logic isn\u2019t self-contained anymore(which is also the case with decorators, but they have become a standard practice by now)."),X=c(),H=o("p"),yn=m("Anyways, the idea behind this article was to tell you about the ability to attach custom attributes to functions. Now that you know this, you might end up using it in a completely different scenario."),Z=c(),w=o("p"),dn=m("JS also has this ability, and it utilizes it in a much more amazing way. Did you know, a "),R=o("code"),_n=m("class"),wn=m(" in JS is nothing but a function on steroids, and unlike we doing almost all of the tooling here by ourselves, JS does it under the hood!"),nn=c(),N=o("p"),bn=m("Going to write an article on JS functions soon! Stay tuned!"),this.h()},l(n){e=p(n,"P",{});var a=i(e);y=h(a,"TIL that you can attach custom properties to a function in python. E.g."),a.forEach(s),d=u(n),f=p(n,"PRE",{class:!0});var qn=i(f);qn.forEach(s),k=u(n),_=p(n,"P",{});var Pn=i(_);tn=h(Pn,"This seems simple, but can be used to build useful things."),Pn.forEach(s),C=u(n),x=p(n,"P",{});var xn=i(x);en=h(xn,"For example, if you want to run a function only once, here\u2019s how you can do it."),xn.forEach(s),j=u(n),b=p(n,"PRE",{class:!0});var Fn=i(b);Fn.forEach(s),D=u(n),g=p(n,"P",{});var gn=i(g);on=h(gn,"This approach can be used to implement singleton pattern."),gn.forEach(s),Y=u(n),S=p(n,"P",{});var Sn=i(S);pn=h(Sn,"Or, if you wish to cache the results"),Sn.forEach(s),I=u(n),v=p(n,"PRE",{class:!0});var Gn=i(v);Gn.forEach(s),q=u(n),T=p(n,"P",{});var Tn=i(T);cn=h(Tn,"Note that caching functionality can be better achieved using decorators. Using the above approach will expose your underlying variables to everyone which is understandably undesirable in most cases, but might be helpful in certain cases. A practical use case is:"),Tn.forEach(s),F=u(n),L=p(n,"P",{});var Ln=i(L);un=h(Ln,"Let\u2019s say you are developing a Machine Learning Pipeline to summarize the contents of a news article, and you don\u2019t want to parse the same news article twice. So you cached the results of your parsing module."),Ln.forEach(s),G=u(n),O=p(n,"P",{});var On=i(O);ln=h(On,"However, later in your pipeline, you identify that some of the summaries are incorrect, and you want to update them manually in the cache itself so that the next time the same article is passed to the parser, the correct summaries come out."),On.forEach(s),U=u(n),$=p(n,"P",{});var $n=i($);rn=h($n,"Now if you have access to the cache contents, someone can go update the summaries in a web portal, and you can inject the updated summaries back into the cache!"),$n.forEach(s),V=u(n),z=p(n,"P",{});var zn=i(z);mn=h(zn,"(Any sane developer would (and should) switch to some standard caching service at this point in time (say Redis), but if your use case is simple, and you don\u2019t want to introduce yet another service to your infrastructure, you can use this hack.)"),zn.forEach(s),B=u(n),A=p(n,"P",{});var An=i(A);hn=h(An,"Of course, You can use this to do silly simple things, like storing how many times a function runs (This might come in handy in profiling)"),An.forEach(s),K=u(n),E=p(n,"PRE",{class:!0});var Un=i(E);Un.forEach(s),Q=u(n),J=p(n,"P",{});var Jn=i(J);kn=h(Jn,"Or how much time did each function call take, or what buckets your integer arguments fall in etc."),Jn.forEach(s),W=u(n),M=p(n,"P",{});var Mn=i(M);fn=h(Mn,"One downside of attaching custom properties on top of functions is, the code responsible for attaching the properties lives inside the function definition, which kind of pollutes the actual logic. Sure you can attach the properties after you\u2019ve defined the functions, but then your function logic isn\u2019t self-contained anymore(which is also the case with decorators, but they have become a standard practice by now)."),Mn.forEach(s),X=u(n),H=p(n,"P",{});var Hn=i(H);yn=h(Hn,"Anyways, the idea behind this article was to tell you about the ability to attach custom attributes to functions. Now that you know this, you might end up using it in a completely different scenario."),Hn.forEach(s),Z=u(n),w=p(n,"P",{});var sn=i(w);dn=h(sn,"JS also has this ability, and it utilizes it in a much more amazing way. Did you know, a "),R=p(sn,"CODE",{});var Nn=i(R);_n=h(Nn,"class"),Nn.forEach(s),wn=h(sn," in JS is nothing but a function on steroids, and unlike we doing almost all of the tooling here by ourselves, JS does it under the hood!"),sn.forEach(s),nn=u(n),N=p(n,"P",{});var Rn=i(N);bn=h(Rn,"Going to write an article on JS functions soon! Stay tuned!"),Rn.forEach(s),this.h()},h(){an(f,"class","language-python"),an(b,"class","language-python"),an(v,"class","language-python"),an(E,"class","language-python")},m(n,a){t(n,e,a),l(e,y),t(n,d,a),t(n,f,a),f.innerHTML=r,t(n,k,a),t(n,_,a),l(_,tn),t(n,C,a),t(n,x,a),l(x,en),t(n,j,a),t(n,b,a),b.innerHTML=Dn,t(n,D,a),t(n,g,a),l(g,on),t(n,Y,a),t(n,S,a),l(S,pn),t(n,I,a),t(n,v,a),v.innerHTML=Yn,t(n,q,a),t(n,T,a),l(T,cn),t(n,F,a),t(n,L,a),l(L,un),t(n,G,a),t(n,O,a),l(O,ln),t(n,U,a),t(n,$,a),l($,rn),t(n,V,a),t(n,z,a),l(z,mn),t(n,B,a),t(n,A,a),l(A,hn),t(n,K,a),t(n,E,a),E.innerHTML=In,t(n,Q,a),t(n,J,a),l(J,kn),t(n,W,a),t(n,M,a),l(M,fn),t(n,X,a),t(n,H,a),l(H,yn),t(n,Z,a),t(n,w,a),l(w,dn),l(w,R),l(R,_n),l(w,wn),t(n,nn,a),t(n,N,a),l(N,bn)},p:ts,d(n){n&&s(e),n&&s(d),n&&s(f),n&&s(k),n&&s(_),n&&s(C),n&&s(x),n&&s(j),n&&s(b),n&&s(D),n&&s(g),n&&s(Y),n&&s(S),n&&s(I),n&&s(v),n&&s(q),n&&s(T),n&&s(F),n&&s(L),n&&s(G),n&&s(O),n&&s(U),n&&s($),n&&s(V),n&&s(z),n&&s(B),n&&s(A),n&&s(K),n&&s(E),n&&s(Q),n&&s(J),n&&s(W),n&&s(M),n&&s(X),n&&s(H),n&&s(Z),n&&s(w),n&&s(nn),n&&s(N)}}}function ps(P){let e,y;const d=[P[0],En];let f={$$slots:{default:[os]},$$scope:{ctx:P}};for(let r=0;r<d.length;r+=1)f=vn(f,d[r]);return e=new es({props:f}),{c(){Qn(e.$$.fragment)},l(r){Wn(e.$$.fragment,r)},m(r,k){Xn(e,r,k),y=!0},p(r,[k]){const _=k&1?Zn(d,[k&1&&Cn(r[0]),k&0&&Cn(En)]):{};k&2&&(_.$$scope={dirty:k,ctx:r}),e.$set(_)},i(r){y||(ns(e.$$.fragment,r),y=!0)},o(r){ss(e.$$.fragment,r),y=!1},d(r){as(e,r)}}}const En={title:"Python functions on steroids",date:"29 September, 2022",categories:["shorts","python","engineering"],description:"An article explaining how to attach custom properties on functions in Python and pros and cons of it.",author:"Prakash"};function is(P,e,y){return P.$$set=d=>{y(0,e=vn(vn({},e),jn(d)))},e=jn(e),[e]}class cs extends Vn{constructor(e){super();Bn(this,e,is,ps,Kn,{})}}var rs=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:cs,metadata:En});export{cs as P,rs as _,En as m};
